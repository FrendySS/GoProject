package database

import (
	"github.com/yourname/MarketEase/config"
	"github.com/yourname/MarketEase/internal/models"
	"gorm.io/driver/postgres"
	"gorm.io/gorm"
	"log"
)

var DB *gorm.DB

func ConnectDatabase(cfg *config.Config) {
	connectionString := cfg.GetDBConnectionString()

	db, err := gorm.Open(postgres.Open(connectionString), &gorm.Config{})
	if err != nil {
		log.Fatalf("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: %v", err)
	}

	// üöÄ –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ uuid-ossp, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
	if err := ensureUUIDExtension(db); err != nil {
		log.Fatalf("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ uuid-ossp: %v", err)
	}

	// üî• –ê–≤—Ç–æ–º–∏–≥—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π
	err = db.AutoMigrate(
		&models.User{},
		&models.Product{},
	)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π: %v", err)
	}

	DB = db
	log.Println("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –º–∏–≥—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π")
}

// ensureUUIDExtension —Å–æ–∑–¥–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ uuid-ossp, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
func ensureUUIDExtension(db *gorm.DB) error {
	return db.Exec(`CREATE EXTENSION IF NOT EXISTS "uuid-ossp";`).Error
}
